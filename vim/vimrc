" Read this: http://karolis.koncevicius.lt/posts/porn_zen_and_vimrc/
" And this: https://vim.fandom.com/wiki/Best_Vim_Tips
" Then Vim!
" If using NeoVim, type this ":help vim_diff.txt"
" Read
" Then NeoVim!
" vim:tw=78:ts=8:sw=2:noet:ft=help:norl:
"-------------------------------------------------------------------------------

" Plugins
"---------------
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'christoomey/vim-tmux-navigator'
Plug 'TheAlemazing/focus-vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'}
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'prettier/vim-prettier', { 'do': 'yarn install' }
Plug 'neovimhaskell/haskell-vim'
Plug 'leafgarland/typescript-vim'
call plug#end()

" Indenting
let g:typescript_indent_disable = 1
let g:haskell_indent_disable=1

" NERDTree config
nnoremap <silent><Leader>d :NERDTreeToggle<CR>
autocmd! BufEnter *
      \ if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) |
      \   q |
      \ endif

" FZF config
nnoremap <C-Space> :Buffers<CR>
nnoremap <C-e> :GFiles<CR>
nnoremap <C-s> :Files %:p:h<CR>
nnoremap <C-g>b :BCommits<CR>
nnoremap <C-g>g :Commits<CR>
nnoremap <silent> <C-N> :cn<CR>zv
nnoremap <silent> <C-P> :cp<CR>zv

" Basic
"---------------
let mapleader=" "
set updatetime=250
set ignorecase
set smartcase
set termguicolors
set tabstop=4
set softtabstop=2
set shiftwidth=2
set splitright
set splitbelow

colorscheme focus

" Yank to clipboard
if has("clipboard")
  set clipboard=unnamed " copy to the system clipboard

  if has("unnamedplus") " X11 support
    set clipboard+=unnamedplus
  endif
endif

" Auto Commands
"---------------
augroup auto_format_group
  autocmd!
  au BufWritePre * :%s/\(\n\n\)\n\+/\1/ge " join multi lines to 1
  au BufWritePre * :%s/\s\+$//e           " auto remove all trailing spaces
  au BufWritePost .vimrc source %         " auto reload vim config

  " Don't auto insert a comment when using O/o for a newline
  au FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

  " On opening a file, jump to the last known cursor position (see :h line())
  au BufReadPost *
        \ if line("'\"") > 1 && line("'\"") <= line("$") && &ft !~# 'commit' |
        \   exe "normal! g`\"" |
        \ endif

  " Always update
  au CursorHold,CursorHoldI <buffer> :update
augroup END

" My Bindings
"---------------
nnoremap <Leader>ls :set hlsearch!<CR>
nnoremap <Leader>ll :set list!<CR>

nnoremap <C-w>n :vnew<CR>
nnoremap <C-l> <C-w>l
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k

nmap <silent> <C-g>n :tabn<CR>
nmap <silent> <C-g>p :tabN<CR>
nmap <silent> <C-g><C-n> :tabm +1<CR>
nmap <silent> <C-g><C-p> :tabm -1<CR>

" Quick resize
nnoremap <silent> <Right> :vertical resize +5<cr>
nnoremap <silent> <Left> :vertical resize -5<cr>
nnoremap <silent> <Up> :resize +5<cr>
nnoremap <silent> <Down> :resize -5<cr>

" Reselect visual block after indenting
vnoremap < <gv
vnoremap > >gv

" Quick fix panel
noremap <Leader>qo :copen<CR>
noremap <Leader>qc :cclose<CR>
noremap <Leader>qn :cnext<CR>
noremap <Leader>qp :cprev<CR>

" Tab management
nnoremap <silent><Leader>tn :tabnew<cr>
nnoremap <silent><Leader>te :tabedit <c-r>=expand("%:p:h")<cr>/
nnoremap <silent><Leader>tm :tabmove<space>
nnoremap <silent><Leader>ts :tab split<cr>
