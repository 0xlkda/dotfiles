export PATH=$HOME/bin:/usr/local/bin:./node_modules/.bin:$PATH
export ZSH_DISABLE_COMPFIX=true
export ZSH=$HOME/.oh-my-zsh

export ZSH_THEME=""

plugins=(git zsh-autosuggestions zsh-completions)

source $ZSH/oh-my-zsh.sh
source $HOME/.cargo/env

fpath+=('/home/alex/.nvm/versions/node/v14.15.1/lib/node_modules/pure-prompt/functions')
autoload -U promptinit; promptinit
prompt pure

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export XDG_CONFIG_HOME=$HOME/.config

# Use vim
export VISUAL=nvim
export EDITOR="$VISUAL"

alias vim='nvim'
alias tn='tmuxinator n'
alias to='tmuxinator o'
alias ts='tmuxinator s'
alias reload='source ~/projects/dotfiles/zsh/zshrc'
alias cleanup='find . -name ".DS_Store" -print -delete'
alias dotfiles='cd ~/projects/dotfiles'
alias vimconf='vim ~/projects/dotfiles/nvim/init.vim'
alias zshconf='vim ~/projects/dotfiles/zsh/zshrc'
alias bashconf='vim ~/projects/dotfiles/bash/bashrc'
alias tmuxconf='vim ~/projects/dotfiles/tmux/tmux.conf'

# Prevent duplicate entries
typeset -U path
typeset -U fpath

# Tree
alias tree='tree -CIa "node_modules|.git|.cache|.*" --dirsfirst'

# ls
alias ls="gls -l --group-directories-first --color=auto"
alias la="gls -lA --group-directories-first --color=auto"

# fzy
wd() {
    cd $(find ~/projects -not -path "*node_modules*" -not -path "*.git*" -not -path "*.next*" -type d -maxdepth 2 | fzy)
}

v() {
    local file=$(find . -type f -not -path "*node_modules*" -not -path "*.git*" -not -path "*.next*" | fzy )
    if [[ $file ]]; then
        vim $file
    fi
}

# NPM
alias nr="npm run"
alias nb="npm run build"
alias ns="npm run start"
alias nt="npm run test"
alias np="npm version patch && npm publish && git push origin master --tags"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# tmux attach setup
alias mux='tmux new-session -ADs main'

# tmux detach setup
exit() {
    if [[ -z $TMUX ]]; then
        builtin exit
        return
    fi

    panes=$(tmux list-panes | wc -l)
    wins=$(tmux list-windows | wc -l)
    count=$(($panes + $wins - 1))
    if [ $count -eq 1 ]; then
        tmux detach
    else
        builtin exit
    fi
}

# csv viewer
csview() {
    local file="$1"
    cat "$file" | sed 's/,/ ,/g' | column -t -s, | less -S
}
export PATH="/usr/local/opt/openjdk/bin:$PATH"
