export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/code/scripts"
export HISTFILE=$HOME/.local/zsh_history
export XDG_CONFIG_HOME=$HOME/.config

# using Vi bindings
bindkey -v
bindkey -M viins "^A" beginning-of-line
bindkey -M viins "^E" end-of-line
bindkey -M viins "^D" delete-char-or-list
bindkey -M viins "^N" down-line-or-history
bindkey -M viins "^P" up-line-or-history

# Changing Directories
setopt auto_cd                 # if a command isn't valid, but is a directory, cd to that dir
setopt auto_pushd              # make cd push the old directory onto the directory stack
setopt pushd_ignore_dups       # donâ€™t push multiple copies of the same directory onto the directory stack

# Expansion and Globbing
setopt extended_glob           # use more awesome globbing features
setopt glob_dots               # include dotfiles when globbing

# Completions
setopt auto_list               # automatically list choices on ambiguous completion
setopt auto_menu               # show completion menu on a successive tab press
setopt complete_in_word        # complete from both ends of a word

# History
setopt append_history          # append to history file
setopt extended_history        # write the history file in the ':start:elapsed;command' format
unsetopt hist_beep             # don't beep when attempting to access a missing history entry
setopt hist_expire_dups_first  # expire a duplicate event first when trimming history
setopt hist_find_no_dups       # don't display a previously found event
setopt hist_ignore_all_dups    # delete an old recorded event if a new event is a duplicate
setopt hist_ignore_dups        # don't record an event that was just recorded again
setopt hist_ignore_space       # don't record an event starting with a space
setopt hist_no_store           # don't store history commands
setopt hist_reduce_blanks      # remove superfluous blanks from each command line being added to the history list
setopt hist_save_no_dups       # don't write a duplicate event to the history file
setopt hist_verify             # don't execute immediately upon history expansion
setopt inc_append_history      # write to the history file immediately, not when the shell exits
unsetopt share_history         # don't share history between all sessions

# Input/Output
unsetopt rm_star_silent        # ask for confirmation for `rm *' or `rm path/*'

# Prompt
eval "$(starship init zsh)"

# Plugins
source $XDG_CONFIG_HOME/antigen/antigen.zsh
antigen bundle 'git'
antigen bundle 'zsh-users/zsh-autosuggestions'
antigen apply

# Aliases
alias vim='nvim'
alias zc='vim ~/code/dotfiles/zsh/zshrc'
alias vc='vim ~/code/dotfiles/nvim/init.lua'
alias bc='vim ~/code/dotfiles/bash/bashrc'
alias tc='vim ~/code/dotfiles/tmux/tmux.conf'
alias s='source ~/.zshrc'
alias c='clear'
alias pn='pnpm'

# Apps
alias pg=/Applications/Postgres.app/Contents/Versions/15/bin/psql
alias alacritty='/Applications/Alacritty.app/Contents/MacOS/alacritty'

# Tmux
alias tks='tmux kill-server'
alias tn='tmuxinator n'
alias to='tmuxinator o'
alias ts='tmuxinator s'

# Listing
alias ls="gls --width 42 --group-directories-first --color=auto"
alias lsr="gls -R" # list recursive
alias lsrf="gls -Rohg" # list recursive full details
alias ll="gls -lh --group-directories-first --color=auto"
alias la="gls -lAh --group-directories-first --color=auto"
alias cpwd="pwd | tr -d '\n' | pbcopy && echo 'pwd copied to clipboard'"

# Tree
alias tree='tree -CIa    "node_modules|dist|.git|.cache|.next|.parcel-cache|.undodir" --dirsfirst'
alias t1='tree -L 1 -CIa "node_modules|dist|.git|.cache|.next|.parcel-cache|.undodir" --dirsfirst'
alias t2='tree -L 2 -CIa "node_modules|dist|.git|.cache|.next|.parcel-cache|.undodir" --dirsfirst'
alias t3='tree -L 3 -CIa "node_modules|dist|.git|.cache|.next|.parcel-cache|.undodir" --dirsfirst'

# history fuzzy searching
bindkey '^r' history-fzy
zle -N history-fzy
function history-fzy() {
  BUFFER=$(history -n 1 | tac | awk '!a[$0]++' | fzy --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle reset-prompt
}

# quick jump
zle -N workdir
zle -N worktree

bindkey '^g' workdir
bindkey '^t' worktree

function workdir() {
  local result=""
  if [ $# -gt 1 ] && echo "Too many agruments" && return
  if [ $# -gt 0 ]; then
    result=$(fd --type directory . $1)
  else
    result=$(fd --type directory . ~/code)
  fi

  if [ -z "$result" ] && echo "No directory match query: $1" && return

  local selection=$(echo $result | fzy)
  if [ "$selection" ] && cd $selection && zle reset-prompt
}

function worktree() {
  local result=$(git worktree list)

  # validate fd command before pipe to fzy
  if [ -z "$result" ] && echo "No directory match query: $1" && return

  # validate fzy selection before next execution
  local selection=$(echo $result | fzy)
  if [ -z "$selection" ] && return

  # extracting path from fzy selection
  local target=$(echo $selection | awk '{print $1}')
  if [ "$target" ] && cd $target && zle reset-prompt
  }

# extra funtions
function slugify() {
  # Forcing the POSIX local so alnum is only 0-9A-Za-z
  export LANG=POSIX
  export LC_ALL=POSIX

  # Keep only alphanumeric value
  # Keep only one dash if there is multiple one consecutively
  # Lowercase everything
  # Remove last dash if there is nothing after
  sed -e 's/[^[:alnum:]]/-/g' | tr -s '-' | tr A-Z a-z | sed -e 's/-$//'

  export LANG=en_US.UTF8
  export LC_ALL=en_US.UTF-8
}

# Shopify
source $HOME/code/dotfiles/shopify_alias.sh
alias theme='shopify theme'

# Ruby
export PATH="/usr/local/opt/ruby/bin:$PATH"

# Node Modules
export PATH="./node_modules/.bin:$PATH"
source /usr/local/opt/asdf/libexec/asdf.sh

# Python
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
