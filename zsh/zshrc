export PATH=$HOME/.local/bin:/usr/local/bin:$PATH # homebrew
export PATH=./node_modules/.bin:$PATH # node_modules
export PATH=/usr/local/opt/make/libexec/gnubin:$PATH # gnubin for using gnu make
export PATH="/usr/local/opt/openjdk/bin:$PATH"
export ZSH_DISABLE_COMPFIX=true
export ZSH=$HOME/.oh-my-zsh

export ZSH_THEME=""

plugins=(git zsh-autosuggestions zsh-completions)

source $ZSH/oh-my-zsh.sh
source $HOME/.cargo/env

fpath+=('/home/alex/.nvm/versions/node/v14.15.1/lib/node_modules/pure-prompt/functions')
autoload -U promptinit; promptinit
prompt pure

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export XDG_CONFIG_HOME=$HOME/.config

# Use vim
export VISUAL=nvim
export EDITOR="$VISUAL"

alias pm='pnpm'
alias vim='nvim'
alias tn='tmuxinator n'
alias to='tmuxinator o'
alias ts='tmuxinator s'
alias reload='source ~/projects/dotfiles/zsh/zshrc'
alias cleanup='find . -name ".DS_Store" -print -delete'
alias dotconf='cd ~/projects/dotfiles; vim'
alias vimconf='vim ~/projects/dotfiles/nvim/init.lua'
alias zshconf='vim ~/projects/dotfiles/zsh/zshrc'
alias bashconf='vim ~/projects/dotfiles/bash/bashrc'
alias tmuxconf='vim ~/projects/dotfiles/tmux/tmux.conf'
alias alacritty='/Applications/Alacritty.app/Contents/MacOS/alacritty'
alias wf=workfile
alias wd=workdir

# Prevent duplicate entries
typeset -U path
typeset -U fpath

# Tree
alias tree='tree -CIa "node_modules|.git|.cache|.next|.turbo" --dirsfirst'
alias tree1='tree -L 1 -CIa "node_modules|.git|.cache|.next|.turbo" --dirsfirst'
alias tree2='tree -L 2 -CIa "node_modules|.git|.cache|.next|.turbo" --dirsfirst'
alias tree3='tree -L 3 -CIa "node_modules|.git|.cache|.next|.turbo" --dirsfirst'

# ls
alias ls="gls -A --group-directories-first --color=auto"
alias ll="gls -lA --group-directories-first --color=auto"

# quickly jump to workdir
#
# Usecases:
#
# workdir <pattern>
# workdir

function workdir() {
  local result=""

  if [ $# -gt 1 ] && echo "Too many agruments" && return

  if [ $# -gt 0 ]; then
    result=$(fd --type directory $1 ~/projects)
  else
    result=$(fd --type directory . ~/projects)
  fi

  # validate fd command before pipe to fzy
  if [ -z "$result" ] && echo "No directory match query: $1" && return

  # validate fzy selection before next execution
  local selection=$(echo $result | fzy)
  if [ -z "$selection" ] && return

  cd $(echo $selection)
}

# quickly open any file in ~/projects/<target> with $EDITOR
#
# Usecases:
#
# workfile <pattern> <directory>
# workfile <pattern>
# workfile

function workfile() {
  local result=""

  if [ $# -eq 0 ]; then
    result=$(fd --hidden --type file . ~/projects)

  elif [ $# -eq 1 ]; then
    result=$(fd --hidden --type file $1 ~/projects)

  elif [ -d ~/projects/$2 ]; then
    result=$(fd --hidden --type file $1 ~/projects/$2)

  else echo "~/projects/$2 does not exists." && return
  fi

  # validate fd command before pipe to fzy
  if [ -z "$result" ]; then
    echo "No file match query: $1"
    return
  fi

  # validate fzy selection before next execution
  local selection=$(echo $result | fzy)
  if [ -z "$selection" ] && return

  # cd to target directory
  cd $(dirname $(echo $selection))

  # open with favourite editor
  $EDITOR $(echo $selection)
}

# NPM
alias nr="npm run"
alias np="npm version patch && npm publish && git push origin master --tags"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# csv viewer
csview() {
  local file="$1"
  cat "$file" | sed 's/,/ ,/g' | column -t -s, | less -S
}
