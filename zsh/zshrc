# Set the shell to zsh
export SHELL=/usr/local/bin/zsh
export LANG=en_US.UTF8
export LC_ALL=en_US.UTF-8

# Import locations
export ZSH_CUSTOM=~/.config/zsh/custom/
export ZSH_ENV_HOME=$HOME/
export XDG_CONFIG_HOME=$HOME/.config
export LOCAL_NODE_BIN=./node_modules/.bin
export PATH="$HOME/.local/bin/:$LOCAL_NODE_BIN:$PATH"

# ZSH options
setopt emacs
setopt functionargzero
setopt hist_ignore_space

export HISTSIZE=100000000
export SAVEHIST=$HISTSIZE
export HISTFILE=$HOME/.local/zsh_history

# Plugins
source $XDG_CONFIG_HOME/antigen/antigen.zsh

antigen bundle git
antigen bundle 'zsh-users/zsh-syntax-highlighting'
antigen bundle 'zsh-users/zsh-autosuggestions'

antigen apply

# Key bindings
bindkey '^n' autosuggest-accept

# starship prompt
eval "$(starship init zsh)"

# My "Plugins"
sources=()

for s in "${sources[@]}"; do
  source $HOME/.config/zsh/include/${s}.zsh
done

alias vim='nvim'
alias reload='source ~/.zshrc'
alias cleanup='fd --no-ignore --hidden .DS_Store . | xargs rm'
alias dotconf='cd ~/coding/dotfiles; vim'
alias vimconf='vim ~/coding/dotfiles/nvim/init.lua'
alias zshconf='vim ~/coding/dotfiles/zsh/zshrc'
alias yaconf='vim ~/coding/dotfiles/yabai/yabairc'
alias bashconf='vim ~/coding/dotfiles/bash/bashrc'
alias tmuxconf='vim ~/coding/dotfiles/tmux/tmux.conf'
alias tn='tmuxinator n'
alias to='tmuxinator o'
alias ts='tmuxinator s'
alias pm='pnpm'
alias cpwd="pwd | tr -d '\n' | pbcopy && echo 'pwd copied to clipboard'"
alias alacritty='/Applications/Alacritty.app/Contents/MacOS/alacritty'
alias wf=workfile
alias wd=workdir
alias wt=worktree
alias j2v=json2csv
alias pg=/Applications/Postgres.app/Contents/Versions/15/bin/psql

# Tree
alias tree='tree -CIa    "node_modules|dist|.git|.cache|.next|.turbo|.parcel-cache|.undodir" --dirsfirst'
alias t1='tree -L 1 -CIa "node_modules|dist|.git|.cache|.next|.turbo|.parcel-cache|.undodir" --dirsfirst'
alias t2='tree -L 2 -CIa "node_modules|dist|.git|.cache|.next|.turbo|.parcel-cache|.undodir" --dirsfirst'
alias t3='tree -L 3 -CIa "node_modules|dist|.git|.cache|.next|.turbo|.parcel-cache|.undodir" --dirsfirst'

# ls
alias ls="gls --group-directories-first --color=auto"
alias la="gls -lah --group-directories-first --color=auto"
alias ll="gls -lh --group-directories-first --color=auto"

# quickly jump to workdir
# workdir pattern?
function workdir() {
  local result=""

  if [ $# -gt 1 ] && echo "Too many agruments" && return

  if [ $# -gt 0 ]; then
    result=$(fd --type directory $1 ~/coding)
  else
    result=$(fd --type directory . ~/coding)
  fi

  # validate fd command before pipe to fzy
  if [ -z "$result" ] && echo "No directory match query: $1" && return

  # validate fzy selection before next execution
  local selection=$(echo $result | fzy)
  if [ -z "$selection" ] && return

  cd $selection
}

zle -N workdir
bindkey '^g' workdir

# quickly change to worktree
# worktree pattern?
function worktree() {
  local result=$(git worktree list)

  # validate fd command before pipe to fzy
  if [ -z "$result" ] && echo "No directory match query: $1" && return

  # validate fzy selection before next execution
  local selection=$(echo $result | fzy)
  if [ -z "$selection" ] && return

  # cd to target directory
  local target=$(echo $selection | awk '{print $1}')
  cd $target
}

zle -N worktree
bindkey '^t' worktree

# NPM
alias nr="npm run"
alias np="npm version patch && npm publish && git push origin master --tags"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

# csv viewer
csview() {
  local file="$1"
  cat "$file" | sed 's/,/ ,/g' | column -t -s, | less -S
}

# shopify env
source $HOME/coding/dotfiles/shopify_alias.sh
alias theme='shopify theme'

# bun completions
[ -s "/Users/alex/.bun/_bun" ] && source "/Users/alex/.bun/_bun"

# Bun
export BUN_INSTALL="/Users/alex/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# pnpm
export PNPM_HOME="/Users/alex/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"

# better history
function history-fzy() {
  local tac

  if which tac > /dev/null; then
    tac="tac"
  else
    tac="tail -r"
  fi

  BUFFER=$(history -n 1 | eval $tac | awk '!a[$0]++' | fzy --query "$LBUFFER")
  CURSOR=$#BUFFER

  zle reset-prompt
}

zle -N history-fzy
bindkey '^r' history-fzy

function slugify() {
  # Forcing the POSIX local so alnum is only 0-9A-Za-z
  export LANG=POSIX
  export LC_ALL=POSIX

  # Keep only alphanumeric value
  # Keep only one dash if there is multiple one consecutively
  # Lowercase everything
  # Remove last dash if there is nothing after
  sed -e 's/[^[:alnum:]]/-/g' | tr -s '-' | tr A-Z a-z | sed -e 's/-$//'
}
