export XDG_CONFIG_HOME=$HOME/.config

export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH=$PATH:$HOME/.cargo/bin
export PATH=$PATH:node_modules/.bin

export VISUAL=nvim
export EDITOR="$VISUAL"

export ZSH=$HOME/.oh-my-zsh
export ZSH_DISABLE_COMPFIX=true
ZSH_THEME=""

plugins=(git zsh-autosuggestions)

source $ZSH/oh-my-zsh.sh

setopt BEEP NO_AUTOLIST BASH_AUTOLIST NO_MENUCOMPLETE

alias pm='pnpm'
alias vim='nvim'
alias tn='tmuxinator n'
alias to='tmuxinator o'
alias ts='tmuxinator s'
alias cpwd="pwd | tr -d '\n' | pbcopy && echo 'pwd copied to clipboard'"
alias reload='omz reload'
alias cleanup='fd --no-ignore --hidden .DS_Store . | xargs rm'
alias dotconf='cd ~/projects/dotfiles; vim'
alias vimconf='vim ~/projects/dotfiles/nvim/init.lua'
alias zshconf='vim ~/projects/dotfiles/zsh/zshrc'
alias yaconf='vim ~/projects/dotfiles/yabai/yabairc'
alias bashconf='vim ~/projects/dotfiles/bash/bashrc'
alias tmuxconf='vim ~/projects/dotfiles/tmux/tmux.conf'
alias alacritty='/Applications/Alacritty.app/Contents/MacOS/alacritty'
alias wf=workfile
alias wd=workdir
alias wt=worktree

# Tree
alias tree='tree -CIa "node_modules|.git|.cache|.next|.turbo" --dirsfirst'
alias t1='tree -L 1 -CIa "node_modules|.git|.cache|.next|.turbo" --dirsfirst'
alias t2='tree -L 2 -CIa "node_modules|.git|.cache|.next|.turbo" --dirsfirst'
alias t3='tree -L 3 -CIa "node_modules|.git|.cache|.next|.turbo" --dirsfirst'

# ls
alias ls="gls --group-directories-first --color=auto"
alias ll="gls -l --group-directories-first --color=auto"

# quickly jump to workdir
#
# Usecases:
#
# workdir <pattern>
# workdir

function workdir() {
  local result=""

  if [ $# -gt 1 ] && echo "Too many agruments" && return

  if [ $# -gt 0 ]; then
    result=$(fd --type directory $1 ~/projects)
  else
    result=$(fd --type directory . ~/projects)
  fi

  # validate fd command before pipe to fzy
  if [ -z "$result" ] && echo "No directory match query: $1" && return

  # validate fzy selection before next execution
  local selection=$(echo $result | fzy)
  if [ -z "$selection" ] && return

  cd $(echo $selection)
}

# quickly change to worktree
#
# Usecases:
#
# worktree <pattern>
# worktree

function worktree() {
  local result=$(git worktree list)

  # validate fd command before pipe to fzy
  if [ -z "$result" ] && echo "No directory match query: $1" && return

  # validate fzy selection before next execution
  local selection=$(echo $result | fzy)
  if [ -z "$selection" ] && return

  # cd to target directory
  local target=$(echo $selection | awk '{print $1}')
  cd $target
}

# quickly open any file in ~/projects/<target> with $EDITOR
#
# Usecases:
#
# workfile <pattern> <directory>
# workfile <pattern>
# workfile

function workfile() {
  local result=""

  if [ $# -eq 0 ]; then
    result=$(fd --hidden --type file . ~/projects)

  elif [ $# -eq 1 ]; then
    result=$(fd --hidden --type file $1 ~/projects)

  elif [ -d ~/projects/$2 ]; then
    result=$(fd --hidden --type file $1 ~/projects/$2)

  else echo "~/projects/$2 does not exists." && return
  fi

  # validate fd command before pipe to fzy
  if [ -z "$result" ]; then
    echo "No file match query: $1"
    return
  fi

  # validate fzy selection before next execution local selection=$(echo $result | fzy) if [ -z "$selection" ] && return

  # cd to target directory
  cd $(dirname $(echo $selection))

  # open with favourite editor
  $EDITOR $(echo $selection)
}

# NPM
alias nr="npm run"
alias np="npm version patch && npm publish && git push origin master --tags"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

# csv viewer
csview() {
  local file="$1"
  cat "$file" | sed 's/,/ ,/g' | column -t -s, | less -S
}

# starship prompt
eval "$(starship init zsh)"

# shopify env
source $HOME/projects/dotfiles/shopify_alias.sh
alias theme='shopify theme'

# bun completions
[ -s "/Users/alex/.bun/_bun" ] && source "/Users/alex/.bun/_bun"

# Bun
export BUN_INSTALL="/Users/alex/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
